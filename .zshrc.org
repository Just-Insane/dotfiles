:DOC-CONFIG:
# Tangle by default to .zshrc, which is the default *rc file for ZSH
#+property: header-args:shell :tangle .zshrc
#+property: header-args: :mkdirp yes :comments no
#+startup: fold
:END:

#+title: zsh literate config
#+author: Jax Gauthier
#+email: jax@gauthier.id

This is my `.zshrc` configuration. From this org file, my `.zshrc` file will be generated.

* Preamble

The ZSH Config file does not have a linear layout like my [[.bashrc.org][.bashrc.org]] config file due to needing to load P10K configurations near the top.

* Enhancement Config

This is configuration for enhancements such as oh-my-zsh and Powerlevel10K

** Powerlevel10K Instant Prompt

This configuration is required by the Powerlevel10K Instant Prompt feature.

#+begin_src shell
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
#+end_src

** Default Config

This is the default config that comes with ZSH via Oh-My-ZSH. We are going to modify some of these configuration options below. Note that some default options have been commented out as we will be overriding them, I'll mark these lines with `# Commented_Out`.

#+begin_src shell
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
#plugins=(git) # Commented_Out

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#+end_src

** ZSH Theme

I will be using the Powerlevel10K Theme.

#+begin_src shell
ZSH_THEME="powerlevel10k/powerlevel10k"
source $ZSH/oh-my-zsh.sh
#+end_src

** Plugins

#+begin_src shell
plugins=(
  aliases
  autojump
  brew
  command-not-found
  common-aliases
  copyfile
  cp
  dircycle
  dotenv
  emacs
  encode64
  extract
  git
  git-auto-fetch
  github
  gitignore
  gpg-agent
  history
  iterm2
  kubectl
  macos
  postgres
  pyenv
  python
  rbw
  repo
  rsync
  safe-paste
  ssh-agent
  thefuck
  tmux
  web-search
  zsh-interactive-cd
)
#+End_src

* User Config

** PATH Updates

#+begin_src shell
# Emacs paths
export PATH="~/.emacs.d/bin:$PATH"
export PATH="/usr/texbin:$PATH"
export PATH="$HOME/.config/emacs/bin:$PATH"

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi

# GO paths
export GOPATH=$HOME/go
export GOROOT="$(brew --prefix golang)/libexec"
export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin"

# NVM paths
export NVM_DIR="$HOME/.nvm"
    [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"
    [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"
#+end_src

** Emacs Editor setup

This is for getting emacs and emacsclient working, including aliases.

#+begin_src shell
# export ALTERNATE_EDITOR=""
export EDITOR="emacsclient -t"           # $EDITOR opens in terminal
export VISUAL="emacsclient -c -a emacs -n"  # $VISUAL opens in GUI mode

alias ec="emacsclient -c -a emacs -n"
alias emacs="emacsclient -c -a emacs -n"
#+end_src

** Dotfiles config

This alias allows me to manage dotfiles as outlined in my [[https://github.com/Just-Insane/dotfiles/blob/main/README.org][dotfiles]] repository.

#+begin_src shell
alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
#+end_src

** GPG Config

Config for using GPG and SSH with my Yubikey

#+begin_src shell
# https://github.com/drduh/YubiKey-Guide#replace-agents
export GPG_TTY="$(tty)"
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpgconf --launch gpg-agent
#+end_src

** PYENV Config

#+begin_src shell
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
#+end_src

** Aliases

#+begin_src shell
eval $(thefuck --alias fuck)
#+end_src

** vterm config

#+begin_src shell
vterm_printf() {
    if [ -n "$TMUX" ] && ([ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ]); then
        # Tell tmux to pass the escape sequences through
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}
#+end_src

** SOPS keyfile

#+begin_src shell
export SOPS_AGE_KEY_FILE=~/.config/sops/age/keys.txt
#+end_src

** ZSH Plug-ins

*** DirEnv

#+begin_src shell
eval "$(direnv hook zsh)"
#+end_src

*** pipx

#+begin_src shell
# Created by `pipx` on 2023-10-15 02:36:24
export PATH="$PATH:$HOME/.local/bin"
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
#+end_src

*** flux completions

#+begin_src shell
# flux completions
command -v flux >/dev/null && . <(flux completion zsh)
#+end_src

*** kubectl completions

#+begin_src shell
# kubectl completions
source <(kubectl completion zsh)
#+end_src

*** fzf completions

#+begin_src shell
# fzf completions
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
#+end_src

** P10K Source
Source P10K Config (Set via P10K during configuration)

#+begin_src shell
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
#+end_src
